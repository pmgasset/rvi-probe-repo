#!/bin/sh
# JSON status endpoint for SupportLink dashboard
printf "Content-Type: application/json\r\n\r\n"

PATH=/usr/sbin:/usr/bin:/sbin:/bin

json_escape() {
    printf '%s' "$1" | sed \
        -e 's/\\/\\\\/g' \
        -e 's/"/\\"/g' \
        -e 's/\x08/\\b/g' \
        -e 's/\x0c/\\f/g' \
        -e 's/\n/\\n/g' \
        -e 's/\r/\\r/g' \
        -e 's/\t/\\t/g'
}

# Find a stable MAC to use as device ID
pick_mac() {
    for IF in eth0 eth1 wan wwan0 wwan1 usb0 usb1; do
        [ -f "/sys/class/net/$IF/address" ] || continue
        MAC=$(cat "/sys/class/net/$IF/address" 2>/dev/null | tr -d ':\n' | tr 'A-Z' 'a-z')
        echo "$MAC" | grep -qE '^[0-9a-f]{12}$' && { echo "$MAC"; return 0; }
    done
    for IF in $(ls /sys/class/net 2>/dev/null | grep -v '^lo$'); do
        [ -f "/sys/class/net/$IF/address" ] || continue
        MAC=$(cat "/sys/class/net/$IF/address" 2>/dev/null | tr -d ':\n' | tr 'A-Z' 'a-z')
        echo "$MAC" | grep -qE '^[0-9a-f]{12}$' && { echo "$MAC"; return 0; }
    done
    return 1
}

HOST=$(hostname 2>/dev/null)
ID=$(cat /etc/rvi/cloudflared.tunnel_id 2>/dev/null)
[ -n "$ID" ] || ID=$(pick_mac 2>/dev/null || echo "")

TUN_HOST=$(cat /etc/rvi/device_host 2>/dev/null)
[ -n "$TUN_HOST" ] || TUN_HOST="$HOST"

# Determine tunnel state by checking for cloudflared
if pidof cloudflared >/dev/null 2>&1; then
    TUN_STATE="up"
else
    TUN_STATE="down"
fi

CODE=$( /usr/bin/rvi-sharecode 2>/dev/null || echo "" )

# Query ip-api.com for connectivity and ISP; fall back to offline on failure
API=$(curl -fs --connect-timeout 5 --max-time 5 "http://ip-api.com/json?fields=status,isp" 2>/dev/null)
ISP=""
INTERNET="offline"
STATUS="bad"
STATUS_TEXT="Offline"
if printf '%s' "$API" | grep -q '"status":"success"'; then
    INTERNET="online"
    STATUS="ok"
    STATUS_TEXT="Online"
    ISP=$(printf '%s' "$API" | awk -F'"' '/"isp":/{print $4; exit}')
fi

printf '{"host":"%s","tunnel_id":"%s","code":"%s","internet":"%s","isp":"%s","status":"%s","status_text":"%s","tunnel":{"hostname":"%s","id":"%s","state":"%s","code":"%s"}}\n' \
  "$(json_escape "$HOST")" \
  "$(json_escape "$ID")" \
  "$(json_escape "$CODE")" \
  "$(json_escape "$INTERNET")" \
  "$(json_escape "$ISP")" \
  "$(json_escape "$STATUS")" \
  "$(json_escape "$STATUS_TEXT")" \
  "$(json_escape "$TUN_HOST")" \
  "$(json_escape "$ID")" \
  "$(json_escape "$TUN_STATE")" \
  "$(json_escape "$CODE")"

