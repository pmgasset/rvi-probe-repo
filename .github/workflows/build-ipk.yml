name: Build rvi-probe IPK

on:
  push:
    paths:
      - 'package/rvi-probe/**'
      - '.github/workflows/build-ipk.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
      R2_BUCKET: ${{ secrets.R2_BUCKET }}
      R2_PUBLIC_BASE: ${{ secrets.R2_PUBLIC_BASE }}
      AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: auto
    steps:
      - uses: actions/checkout@v4

      - name: Install AWS CLI v2
        run: |
          set -euxo pipefail
          curl -fsSL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
          unzip -q awscliv2.zip
          sudo ./aws/install --update

      - name: Create IPK package manually
        run: |
          set -euxo pipefail

          mkdir -p build/{CONTROL,data}

          # Copy files - EXCLUDE CONTROL directory from data
          echo "Copying files from package/rvi-probe/files/ (excluding CONTROL)"
          find package/rvi-probe/files -maxdepth 1 -mindepth 1 -not -name CONTROL -exec cp -r {} build/data/ \;

          # Verify files were copied
          FILECOUNT=$(find build/data -type f | wc -l)
          echo "Files copied to data: $FILECOUNT"
          find build/data -type f | head -10

          if [ "$FILECOUNT" -lt 1 ]; then
            echo "ERROR: No files found to package"
            echo "Checking package/rvi-probe/files contents:"
            ls -la package/rvi-probe/files/
            exit 1
          fi

          # Set executable permissions
          find build/data -path "*/bin/*" -type f -exec chmod 755 {} + || true
          find build/data -path "*/sbin/*" -type f -exec chmod 755 {} + || true  
          find build/data -path "*/init.d/*" -type f -exec chmod 755 {} + || true
          find build/data -path "*/cgi-bin/*" -type f -exec chmod 755 {} + || true
          find build/data -name "*.sh" -type f -exec chmod 755 {} + || true

          # Create control file
          cat > build/CONTROL/control <<'EOC'
          Package: rvi-probe
          Version: 0.5.0-2
          Architecture: all
          Maintainer: RVInternetHelp <support@rvinternethelp.com>
          Section: net
          Priority: optional
          Depends: curl, ca-bundle, ca-certificates, jq, ip-full, ubus, uclient-fetch, iwinfo, wireless-tools, openssl-util
          Description: RVInternetHelp Network Probe
           Support/diagnostics agent with outage checks, speed tests,
           Cloudflare tunnel share code, JSON status, cell metrics, and CRM hooks.
          EOC

          # Copy maintainer scripts
          for f in preinst postinst prerm postrm; do
            if [ -f package/rvi-probe/files/CONTROL/$f ]; then
              install -m 755 package/rvi-probe/files/CONTROL/$f build/CONTROL/$f
            fi
          done

          cd build

          # Create IPK files
          echo "2.0" > debian-binary
          tar --owner=0 --group=0 --numeric-owner -czf control.tar.gz -C CONTROL .
          
          # Create data archive - FIXED METHOD
          echo "Files being archived:"
          find data -type f | head -5
          
          # Change to data directory and create archive from there
          cd data
          tar --owner=0 --group=0 --numeric-owner -czf ../data.tar.gz .
          cd ..

          # Verify data archive is not empty
          DATASIZE=$(stat -c%s data.tar.gz)
          echo "Data archive size: $DATASIZE bytes"
          echo "First 10 files in data archive:"
          tar -tzf data.tar.gz | head -10 || true

          if [ "$DATASIZE" -lt 50 ]; then
            echo "ERROR: data.tar.gz is too small"
            exit 1
          fi

          # Create the IPK
          ar -cr rvi-probe_0.5.0-2_all.ipk debian-binary control.tar.gz data.tar.gz
          
          ls -la rvi-probe_0.5.0-2_all.ipk
          echo "IPK package built successfully"

      - name: Create package index
        run: |
          set -euxo pipefail
          cd build
          SIZE=$(stat -c%s rvi-probe_0.5.0-2_all.ipk)
          MD5=$(md5sum rvi-probe_0.5.0-2_all.ipk | cut -d' ' -f1)
          SHA256=$(sha256sum rvi-probe_0.5.0-2_all.ipk | cut -d' ' -f1)
          cat > Packages <<EOP
          Package: rvi-probe
          Version: 0.5.0-2
          Architecture: all
          Maintainer: RVInternetHelp <support@rvinternethelp.com>
          Section: net
          Priority: optional
          Depends: curl, ca-bundle, ca-certificates, jq, ip-full, ubus, uclient-fetch, iwinfo, wireless-tools, openssl-util
          Description: RVInternetHelp Network Probe
           Support/diagnostics agent with outage checks, speed tests,
           Cloudflare tunnel share code, JSON status, cell metrics, and CRM hooks.
          Filename: rvi-probe_0.5.0-2_all.ipk
          Size: $SIZE
          MD5Sum: $MD5
          SHA256sum: $SHA256
          EOP
          gzip -fk9 Packages

      - name: Upload to Cloudflare R2
        run: |
          set -euxo pipefail
          cd build
          ENDPOINT="https://${R2_ACCOUNT_ID}.r2.cloudflarestorage.com"
          
          # Upload with no-cache to ensure fresh downloads
          aws s3 cp Packages "s3://${R2_BUCKET}/openwrt/23.05/" --endpoint-url "$ENDPOINT" --acl public-read --content-type text/plain --cache-control 'no-store'
          aws s3 cp Packages.gz "s3://${R2_BUCKET}/openwrt/23.05/" --endpoint-url "$ENDPOINT" --acl public-read --content-type application/gzip --cache-control 'no-store'
          aws s3 cp rvi-probe_0.5.0-2_all.ipk "s3://${R2_BUCKET}/openwrt/23.05/" --endpoint-url "$ENDPOINT" --acl public-read --content-type application/octet-stream --cache-control 'no-store'

      - name: Verify upload
        run: |
          set -euxo pipefail
          curl -fI "${R2_PUBLIC_BASE}/openwrt/23.05/Packages" || echo "Package index check failed"
          curl -fI "${R2_PUBLIC_BASE}/openwrt/23.05/rvi-probe_0.5.0-2_all.ipk" || echo "IPK check failed"
          echo "Upload complete"
