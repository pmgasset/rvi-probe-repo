name: Build librespeed CLI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-librespeed:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: mips_24kc
            goos: linux
            goarch: mipsle
            gomips: softfloat
            cgo: 0
          - arch: aarch64_cortex-a53
            goos: linux
            goarch: arm64
            gomips: ""
            cgo: 0

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: |
        set -euxo pipefail
        sudo apt-get update
        sudo apt-get install -y curl unzip

    - name: Install AWS CLI v2
      run: |
        set -euxo pipefail
        curl -fsSL "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -q awscliv2.zip
        sudo ./aws/install --update
        aws --version

    - name: Download librespeed-cli source
      run: |
        set -euxo pipefail
        curl -sL "https://codeload.github.com/librespeed/speedtest-cli/tar.gz/master" -o speedtest-cli.tar.gz
        tar -xzf speedtest-cli.tar.gz
        mv speedtest-cli-master speedtest-cli
        test -d speedtest-cli
        test -f speedtest-cli/main.go

    - name: Build librespeed-cli
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOMIPS: ${{ matrix.gomips }}
        CGO_ENABLED: ${{ matrix.cgo }}
      run: |
        set -euxo pipefail
        cd speedtest-cli
        
        # Build the binary
        go build -ldflags="-s -w" -o librespeed-cli .
        test -s librespeed-cli
        
        # Verify it's the right architecture
        file librespeed-cli
        
        # Create output directory
        mkdir -p ../dist/${{ matrix.arch }}
        mv librespeed-cli ../dist/${{ matrix.arch }}/
        
        echo "Build completed for ${{ matrix.arch }}"

    - name: Generate checksums
      run: |
        set -euxo pipefail
        cd dist/${{ matrix.arch }}
        
        # Generate SHA256 checksum
        sha256sum librespeed-cli > SHA256SUMS
        test -s SHA256SUMS
        
        # Verify checksum file
        cat SHA256SUMS
        sha256sum -c SHA256SUMS
        
        echo "Checksums generated and verified"

    - name: Upload to Cloudflare R2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
        R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
        R2_BUCKET: ${{ secrets.R2_BUCKET }}
      run: |
        set -euxo pipefail
        cd dist/${{ matrix.arch }}
        
        # Upload binary
        aws s3 cp librespeed-cli \
          "s3://${R2_BUCKET}/librespeed/23.05/${{ matrix.arch }}/librespeed-cli" \
          --endpoint-url "https://${R2_ACCOUNT_ID}.r2.cloudflarestorage.com" \
          --acl public-read
        
        # Upload checksums
        aws s3 cp SHA256SUMS \
          "s3://${R2_BUCKET}/librespeed/23.05/${{ matrix.arch }}/SHA256SUMS" \
          --endpoint-url "https://${R2_ACCOUNT_ID}.r2.cloudflarestorage.com" \
          --acl public-read
        
        echo "Upload completed for ${{ matrix.arch }}"

    - name: Verify upload
      run: |
        set -euxo pipefail
        echo "Build and upload completed successfully for ${{ matrix.arch }}!"
        echo "Published to: ${{ secrets.R2_PUBLIC_BASE }}/librespeed/23.05/${{ matrix.arch }}/"